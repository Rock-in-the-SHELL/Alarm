// Generated by Dagger (https://dagger.dev).
package com.example.alarm.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import kotlinx.coroutines.CoroutineDispatcher;

@ScopeMetadata
@QualifierMetadata("com.example.alarm.di.DefaultDispatcher")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DispatchersModule_ProvideDefaultDispatcherFactory implements Factory<CoroutineDispatcher> {
  private final DispatchersModule module;

  public DispatchersModule_ProvideDefaultDispatcherFactory(DispatchersModule module) {
    this.module = module;
  }

  @Override
  public CoroutineDispatcher get() {
    return provideDefaultDispatcher(module);
  }

  public static DispatchersModule_ProvideDefaultDispatcherFactory create(DispatchersModule module) {
    return new DispatchersModule_ProvideDefaultDispatcherFactory(module);
  }

  public static CoroutineDispatcher provideDefaultDispatcher(DispatchersModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideDefaultDispatcher());
  }
}
