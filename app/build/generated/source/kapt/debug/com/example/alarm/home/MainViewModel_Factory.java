// Generated by Dagger (https://dagger.dev).
package com.example.alarm.home;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineDispatcher;

@ScopeMetadata
@QualifierMetadata("com.example.alarm.di.DefaultDispatcher")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<CoroutineDispatcher> defaultDispatcherProvider;

  public MainViewModel_Factory(Provider<CoroutineDispatcher> defaultDispatcherProvider) {
    this.defaultDispatcherProvider = defaultDispatcherProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(defaultDispatcherProvider.get());
  }

  public static MainViewModel_Factory create(
      Provider<CoroutineDispatcher> defaultDispatcherProvider) {
    return new MainViewModel_Factory(defaultDispatcherProvider);
  }

  public static MainViewModel newInstance(CoroutineDispatcher defaultDispatcher) {
    return new MainViewModel(defaultDispatcher);
  }
}
